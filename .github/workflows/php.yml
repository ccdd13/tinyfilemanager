name: PHP Composer

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 5
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: install php
      run: |
        sudo apt-get update  -y
        sudo apt-get upgrade -y
        sudo apt-get install -y php
        php --version

    - name: get composer.phar
      run: |
        rm -fv composer.phar
        curl -sL 'https://getcomposer.org/download/' \
          | grep -A 5 -Fhi '<pre class="installer">' \
          | sed -Ee 's~<pre\sclass="installer">~\n~i;s~</pre>~\n~ig' \
          | head -n -1 \
          | bash -x

    - name: php
      uses: franzliedke/gh-action-php@master
      with:
        args: php7.4 composer.phar

#    - name: Validate composer.json and composer.lock
#      run: composer validate

#    - name: Cache Composer packages
#      id: composer-cache
#      uses: actions/cache@v2
#      with:
#        path: vendor
#        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
#        restore-keys: |
#          ${{ runner.os }}-php-

#    - name: Install dependencies
#      if: steps.composer-cache.outputs.cache-hit != 'true'
#      run: composer install --prefer-dist --no-progress --no-suggest

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
